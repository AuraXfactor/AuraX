rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can read/write their own, read public profiles
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId ||
        resource.data.isPublic == true
      );
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Public user data for search/suggestions
    match /publicProfiles/{userId} {
      allow read: if true; // Anyone can read for search/suggestions
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Friend requests system - simplified for debugging
    match /friendRequests/{requestId} {
      allow read, write, create, update, delete: if request.auth != null;
    }

    // Friends relationships (subcollection approach) - simplified for debugging
    match /friends/{userId}/friendships/{friendId} {
      allow read, write, create, update, delete: if request.auth != null;
    }

    // Groups system
    match /groups/{groupId} {
      allow read: if request.auth != null && (
        resource.data.isPublic == true ||
        resource.data.members[request.auth.uid] == true
      );
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.ownerId ||
        resource.data.admins[request.auth.uid] == true
      );
    }

    // Group memberships
    match /groupMembers/{groupId}/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Chat messages (individual and group)
    match /chats/{chatId}/messages/{messageId} {
      allow read: if request.auth != null && 
        resource.data.participants[request.auth.uid] == true;
      allow create: if request.auth != null && 
        request.resource.data.participants[request.auth.uid] == true;
    }

    // Enhanced encrypted chats
    match /enhancedChats/{chatId} {
      allow read, write, create, update: if request.auth != null;
    }

    // Enhanced chat messages
    match /enhancedChats/{chatId}/messages/{messageId} {
      allow read, write, create, update: if request.auth != null;
    }

    // Aura Posts - social ephemeral posts
    match /auraPosts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorUid;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorUid;
    }
    
    // Aura Post Reactions
    match /auraPosts/{postId}/reactions/{reactionId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userUid;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userUid;
    }
    
    // Aura Post Replies  
    match /auraPosts/{postId}/replies/{replyId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userUid;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userUid;
    }

    // Journal entries - users can read/write their own journals
    match /journals/{userId}/entries/{entryId} {
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
    }

    // Specialized journals - users can read/write their own specialized journal entries
    match /specialized-journals/{userId}/{journalType}/{entryId} {
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
    }

    // User goals - users can read/write their own goals
    match /user-goals/{userId} {
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
    }

    // Existing collections (keep these)
    match /boosts/{boostId} {
      allow read: if true;
      allow write: if false;
    }
    match /userBoosts/{userId}/entries/{entryId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    // Social Posts - 24hr stories and regular posts
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Post Comments
    match /posts/{postId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Social chat system
    match /chats/{chatId} {
      allow read, write, create, update: if request.auth != null;
    }


    // Legacy Group Chats - members can read/write
    match /groupChats/{groupId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.members;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
    }
    
    // Legacy Group Messages - members can read/write
    match /groupChats/{groupId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/groupChats/$(groupId)).data.members;
      allow create: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/groupChats/$(groupId)).data.members &&
        request.auth.uid == request.resource.data.fromUid;
    }

    // Chat metadata minimal read by participants only
    match /users/{userId}/chatMeta/{chatId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Legacy chat messages - individual chat structure
    match /users/{userId}/chats/{chatId}/messages/{messageId} {
      allow read, write, create: if request.auth != null && request.auth.uid == userId;
    }

    // Typing indicator docs under chats are readable by the two participants only
    match /users/{userId}/chats/{chatId}/typing/{otherUid} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /analytics/{collection=**} {
      allow read, write: if false; // server-only
    }
  }
}

